{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","PaginationButton","active","dataCy","label","disabled","onClick","ariaDisabled","className","cn","type","defaultProps","Pagination","total","perPage","currentPage","onPageChange","countPage","Math","ceil","pages","map","page","String","items","App","useState","setPerPage","setCurrentPage","length","maxPage","startPage","endPage","visiblePages","slice","id","onChange","event","target","value","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"2MAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,WCMHG,EAAoD,SAAC,GAOpD,IANLC,EAMI,EANJA,OACAC,EAKI,EALJA,OACAC,EAII,EAJJA,MACAC,EAGI,EAHJA,SACAC,EAEI,EAFJA,QAEI,IADJC,oBACI,SACJ,OACE,oBAAIC,UAAWC,IAAG,YAAa,CAAEJ,WAAUH,WAA3C,SACE,wBACEQ,KAAK,SACL,UAASP,EACTK,UAAU,YACVF,QAASA,EACT,gBAAeC,EAAe,OAAS,QALzC,SAOGH,OAMTH,EAAiBU,aAAe,CAC9BJ,cAAc,GAUT,IAAMK,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QAGI,IAFJC,mBAEI,MAFU,EAEV,EADJC,EACI,EADJA,aAEMC,EAAYC,KAAKC,KAAKN,EAAQC,GAC9BM,EAAQzB,EAAW,EAAGsB,GAc5B,OACE,qBAAIT,UAAU,aAAd,UACE,cAAC,EAAD,CACEJ,MAAM,OACNF,QAAQ,EACRG,SAA0B,IAAhBU,EACVR,aAA8B,IAAhBQ,EACdT,QAnBc,WACdS,GAA+B,IAAhBA,GACjBC,EAAaD,EAAc,IAkBzBZ,OAAO,aAGRiB,EAAMC,KAAI,SAACC,GAAD,OACT,cAAC,EAAD,CAEEpB,OAAQa,IAAgBO,EACxBlB,MAAOmB,OAAOD,GACdjB,UAAU,EACVC,QAAS,kBAAMU,EAAaM,IAC5BnB,OAAO,YALFmB,MAST,cAAC,EAAD,CACElB,MAAM,OACNF,QAAQ,EACRG,SAAUU,IAAgBE,EAC1BV,aAAcQ,IAAgBE,EAC9BX,QAjCc,WACdS,GAAeA,IAAgBE,GACjCD,EAAaD,EAAc,IAgCzBZ,OAAO,iBC1FTqB,EAAQ7B,EAAW,EAAG,IACzB0B,KAAI,SAAAtB,GAAC,qBAAYA,MAEP0B,EAAgB,WAC3B,MAA8BC,mBAAS,GAAvC,mBAAOZ,EAAP,KAAgBa,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAOX,EAAP,KAAoBa,EAApB,KAWMf,EAAQW,EAAMK,OACdC,EAAUhB,EAAUC,EACpBgB,EAAYD,EAAUhB,EACtBkB,EAAUF,EAAUjB,EAAQA,EAAQiB,EAEpCG,EAAeT,EAAMU,MAAMH,EAAWC,GAE5C,OACE,sBAAKxB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWO,EADX,mBACiCgB,EAAY,EAD7C,cACoDC,EADpD,eACkEnB,EADlE,OAIA,sBAAKL,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACR2B,GAAG,kBACH3B,UAAU,eACV4B,SA3BN,SAACC,GACDV,EAAW,GACXA,GAAYU,EAAMC,OAAOC,OACzBX,EAAe,IAyBTW,MAAOzB,EALT,UAOE,wBAAQyB,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOC,QAAQ,kBAAkBhC,UAAU,qBAA3C,+BAOF,cAAC,EAAD,CACEK,MAAOA,EACPC,QAASA,EACTC,YAAaA,EACbC,aAnDa,SAACM,GAAD,OAAkBM,EAAeN,MAsDhD,6BACGW,EAAaZ,KAAI,SAACoB,GAAD,OAChB,oBAAe,UAAQ,OAAvB,SACGA,GADMA,YCjEnBC,IAASC,OACP,cAAC,aAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.1208bbc8.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype PaginationButtonProps = {\n  dataCy: string;\n  label: string;\n  active: boolean;\n  disabled: boolean;\n  onClick: () => void;\n  ariaDisabled?: boolean;\n};\n\nconst PaginationButton: React.FC<PaginationButtonProps> = ({\n  active,\n  dataCy,\n  label,\n  disabled,\n  onClick,\n  ariaDisabled = true, // Set the default value to true\n}) => {\n  return (\n    <li className={cn('page-item', { disabled, active })}>\n      <button\n        type=\"button\"\n        data-cy={dataCy}\n        className=\"page-link\"\n        onClick={onClick}\n        aria-disabled={ariaDisabled ? 'true' : 'false'}\n      >\n        {label}\n      </button>\n    </li>\n  );\n};\n\nPaginationButton.defaultProps = {\n  ariaDisabled: true,\n};\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage = 1,\n  onPageChange,\n}) => {\n  const countPage = Math.ceil(total / perPage);\n  const pages = getNumbers(1, countPage);\n\n  const prevOnClick = () => {\n    if (currentPage && currentPage !== 1) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  const nextOnClick = () => {\n    if (currentPage && currentPage !== countPage) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <PaginationButton\n        label=\"«\"\n        active={false}\n        disabled={currentPage === 1}\n        ariaDisabled={currentPage === 1}\n        onClick={prevOnClick}\n        dataCy=\"prevLink\"\n      />\n\n      {pages.map((page) => (\n        <PaginationButton\n          key={page}\n          active={currentPage === page}\n          label={String(page)}\n          disabled={false}\n          onClick={() => onPageChange(page)}\n          dataCy=\"pageLink\"\n        />\n      ))}\n\n      <PaginationButton\n        label=\"»\"\n        active={false}\n        disabled={currentPage === countPage}\n        ariaDisabled={currentPage === countPage}\n        onClick={nextOnClick}\n        dataCy=\"nextLink\"\n      />\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const changePage = (page: number) => setCurrentPage(page);\n\n  const handlePerPageChange\n    = (event: React.ChangeEvent<HTMLSelectElement>) => {\n      setPerPage(5);\n      setPerPage(+event.target.value);\n      setCurrentPage(1);\n    };\n\n  const total = items.length;\n  const maxPage = perPage * currentPage;\n  const startPage = maxPage - perPage;\n  const endPage = maxPage > total ? total : maxPage;\n\n  const visiblePages = items.slice(startPage, endPage);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${startPage + 1} - ${endPage} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            onChange={handlePerPageChange}\n            value={perPage}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      {/* Move this markup to Pagination */}\n\n      <Pagination\n        total={total}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={changePage}\n      />\n\n      <ul>\n        {visiblePages.map((item) => (\n          <li key={item} data-cy=\"item\">\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}